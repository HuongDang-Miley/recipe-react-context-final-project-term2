[{"/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/index.js":"1","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/App.js":"2","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/reportWebVitals.js":"3","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/MealThumb/MealThumb.js":"4","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/MealThumb/FavButton.js":"5","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/SingleMealPage/SingleMealPage.js":"6","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/menuBars/SingleMealBar.js":"7","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/MealThumb/RandomList.js":"8","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/menuBars/AllMealsBar.js":"9","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/loginAndRegister/Login.js":"10","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/loginAndRegister/Register.js":"11","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/MealThumb/FavList.js":"12","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/Context.js":"13","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/hooks/useLocalStorage.js":"14"},{"size":500,"mtime":1608308921858,"results":"15","hashOfConfig":"16"},{"size":3027,"mtime":1608476832646,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1608308921859,"results":"18","hashOfConfig":"16"},{"size":634,"mtime":1608420542825,"results":"19","hashOfConfig":"16"},{"size":979,"mtime":1608413506766,"results":"20","hashOfConfig":"16"},{"size":4761,"mtime":1608479938253,"results":"21","hashOfConfig":"16"},{"size":2483,"mtime":1608422184096,"results":"22","hashOfConfig":"16"},{"size":1846,"mtime":1608471441904,"results":"23","hashOfConfig":"16"},{"size":3375,"mtime":1608428737517,"results":"24","hashOfConfig":"16"},{"size":4414,"mtime":1608423667965,"results":"25","hashOfConfig":"16"},{"size":4642,"mtime":1608423681443,"results":"26","hashOfConfig":"16"},{"size":1718,"mtime":1608428395286,"results":"27","hashOfConfig":"16"},{"size":88,"mtime":1608472645390,"results":"28","hashOfConfig":"16"},{"size":542,"mtime":1608471072238,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1gdbg4y",{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"32"},"/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/index.js",[],["68","69"],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/App.js",["70","71","72","73"],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/reportWebVitals.js",[],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/MealThumb/MealThumb.js",["74","75","76","77"],"import React from 'react'\nimport './MealThumb.css'\nimport { BrowserRouter as Router, Link } from 'react-router-dom'\n\n\nexport const MealThumb = ({ item }) => {\n    const { idMeal, strCategory, strMeal, strMealThumb } = item\n    return (\n        \n            <div id='meal-module-wrapper'>\n                <p className='meal-module-category'>{strCategory.toUpperCase()}</p>\n                <div className='name-and-img-wrapper'>\n                    <div className='meal-module-name'>{strMeal}</div>\n                    <img className='meal-module-image' src={strMealThumb} />\n                </div>\n            </div>\n        \n    )\n}\n\n","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/MealThumb/FavButton.js",[],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/SingleMealPage/SingleMealPage.js",["78","79","80","81","82","83","84","85"],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/menuBars/SingleMealBar.js",["86","87"],"import React from 'react';\nimport { BrowserRouter as Router, NavLink } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    color: 'white',\n  },\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <NavLink to='/all-meals' variant=\"h6\" activeStyle={{ textDecoration: 'underline' }} className={classes.title}>\n            <Typography >\n              Go Back\n          </Typography>\n          </NavLink>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n\n\n","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/MealThumb/RandomList.js",["88","89","90","91","92"],"\nimport React, {useContext} from 'react';\nimport { BrowserRouter as Router, Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { MealThumb } from './MealThumb'\nimport { FavButton } from './FavButton'\nimport MenuAppBar from '../menuBars/AllMealsBar'\nimport {AuthContext} from '../Context'\nimport './MealThumb.css'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        height: 220,\n\n    },\n}));\n\nconst wrapper = {\n    width: '70%',\n    margin: 'auto'\n}\n\nexport default function RandomList() {\n    const {auth, user, authorize, randomList, favList} = useContext(AuthContext)\n    \n    const classes = useStyles();\n    return (\n        <>\n            <MenuAppBar />\n            <div style={wrapper}>\n                <div className={classes.root}>\n                    <Grid container spacing={3} direction=\"row\" justify=\"center\">\n                        {randomList !== undefined\n                            ? (randomList.map(item => {\n                                return (\n                                    <Grid item xs={6} sm={3}>\n                                        <Link to={{ pathname: `/single-meal`, meal: { item } }}>\n                                            <MealThumb item={item} />\n                                        </Link>\n                                        <FavButton className='small-fav-btn' item={item} />\n                                    </Grid>\n                                )\n                            }))\n                            : ''\n                        }\n                    </Grid>\n                </div>\n            </div>\n        </>\n    );\n}\n\n","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/menuBars/AllMealsBar.js",["93","94","95","96","97","98","99"],"import React from 'react';\nimport { BrowserRouter as Router, NavLink } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport Box from '@material-ui/core/Box';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    color: 'white',\n    marginRight: 40,\n  },\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar display=\"flex\" p={1} >\n          <Box width='100%' backgroundColor=\"green\">\n            <IconButton>\n              <NavLink to='/all-meals' variant=\"h6\" activeStyle={{ textDecoration: 'underline' }} className={classes.title}>\n                All Meals\n          </NavLink>\n            </IconButton>\n            <IconButton>\n              <NavLink to='/favorites' variant=\"h6\" activeStyle={{ textDecoration: 'underline' }} className={classes.title}>\n                Favorites\n          </NavLink>\n            </IconButton>\n\n\n          </Box>\n          <Box p={1} flexShrink={1}>\n            {auth && (\n              <div>\n                <IconButton\n                  aria-label=\"account of current user\"\n                  aria-controls=\"menu-appbar\"\n                  aria-haspopup=\"true\"\n                  onClick={handleMenu}\n                  color=\"inherit\"\n                >\n                  <AccountCircle />\n                  <NavLink to='/login' variant=\"h6\" activeStyle={{ textDecoration: 'underline' }} className={classes.title}>\n                    Logout\n          </NavLink>\n                </IconButton>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  keepMounted\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  open={open}\n                  onClose={handleClose}\n                >\n                  <MenuItem onClick={handleClose}>Profile</MenuItem>\n                  <MenuItem onClick={handleClose}>My account</MenuItem>\n                </Menu>\n              </div>\n            )}\n          </Box>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n\n\n","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/loginAndRegister/Login.js",["100"],"\nimport React, { Component } from 'react'\nimport {Link} from 'react-router-dom'\nimport validator from 'validator';\nimport axios from 'axios'\nimport './loginAndRegisterStyle.css'\n\nexport default class Login extends Component {\n    state = {\n        email: '',\n        password: '',\n        isEmailError: false,\n        emailErrorMessage: '',\n        isPwError: false,\n        pwErrorMessage: '',\n        userToken: '',\n    }\n\n    handleOnChangeEmail = (event) => {\n        if (!validator.isEmail(event.target.value)) {\n            this.setState({\n                isEmailError: true,\n                emailErrorMessage: 'Please type correct email'\n            })\n        } else {\n            this.setState({\n                isEmailError: false,\n            })\n        }\n\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleOnChangePassword = (event) => {\n        let password = validator.matches(\n            event.target.value,\n            \"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\")\n        if (!password) {\n            this.setState({\n                isPwError: true,\n                pwErrorMessage: 'Password must contain: 1 lowercase, 1 uppercase, 1 number, 1 symbol'\n            })\n        } else {\n            this.setState({\n                isPwError: false,\n            })\n        }\n\n        this.setState({\n            [event.target.name]: event.target.value\n        }, () => {\n            \n        })\n    }\n\n\n    handleOnSubmit = async (event) => {\n        event.preventDefault()\n\n        const { isPwError, isEmailError } = this.state\n\n        if (isPwError === false && isEmailError === false) {\n            try {\n                let newUser = await axios.post('http://localhost:3001/api/users/login', {\n                    email: this.state.email,\n                    password: this.state.password\n                })\n                \n              \n                let userEmail = newUser.data.email\n                let twtToken = newUser.data.jwtToken\n              \n                localStorage.setItem('jwtToken', twtToken)\n                this.setState({\n                    userToken: 'thisIsAToken'\n                }, () => {\n                    this.props.authorize(twtToken, userEmail )\n                    this.props.history.push('/all-meals')\n                })\n            }\n            catch (e) {\n                console.log(e.response.data)\n            }\n        }\n    }\n\n\n    render() {\n        const { email, password, isEmailError, emailErrorMessage, isPwError, pwErrorMessage } = this.state\n        return (\n            <div>\n                <img id='hero-img' src='/RegisterImgNoText.jpg' />\n                <div className='register-login-wrapper'>\n                    <h1 className='register-header'>Welcome To The World \"Largest\"<br /> Recipes Source </h1>\n                    <form onSubmit={this.handleOnSubmit}>\n                        <p className='label-name'>Email</p><br />\n                        <input\n                            onChange={this.handleOnChangeEmail}\n                            className='input-field'\n                            type='text'\n                            name='email'\n                            value={email}\n                        >\n                        </input><br />\n                        {isEmailError ? (<p className=\"error-message\">{emailErrorMessage}</p>) : ''}\n                        <p className='label-name'>Password</p><br />\n                        <input\n                            onChange={this.handleOnChangePassword}\n                            className='input-field'\n                            type='text'\n                            name='password'\n                            value={password}\n                        >\n                        </input><br />\n                        {isPwError ? (<p className=\"error-message\">{pwErrorMessage}</p>) : ''}\n                        <button\n                            type='submit'\n                            className=\"register-login-button\"\n                        >Login</button>\n                    </form>\n                    <Link to='/register' className='register-login-link'><p className='register-login-link'>Don't have an account? <span className='register-login-link-span'>Register Here   </span></p></Link>\n        \n\n                </div>\n            </div>\n        )\n    }\n}\n","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/loginAndRegister/Register.js",["101"],"\nimport React, { Component } from 'react'\nimport validator from 'validator';\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\nimport './loginAndRegisterStyle.css'\n\n\nexport default class Login extends Component {\n    state = {\n        email: '',\n        password: '',\n        isEmailError: false,\n        emailErrorMessage: '',\n        isPwError: false,\n        pwErrorMessage: '',\n        userToken: '',\n    }\n\n    handleOnChangeEmail = (event) => {\n        if (!validator.isEmail(event.target.value)) {\n            this.setState({\n                isEmailError: true,\n                emailErrorMessage: 'Please type correct email'\n            })\n        } else {\n            this.setState({\n                isEmailError: false,\n            })\n        }\n\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleOnChangePassword = (event) => {\n        let password = validator.matches(\n            event.target.value,\n            \"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\")\n        if (!password) {\n            this.setState({\n                isPwError: true,\n                pwErrorMessage: 'Password must contain: 1 lowercase, 1 uppercase, 1 number, 1 symbol'\n            })\n        } else {\n            this.setState({\n                isPwError: false,\n            })\n        }\n\n        this.setState({\n            [event.target.name]: event.target.value\n        }, () => {\n        })\n    }\n\n\n    handleOnSubmit = async (event) => {\n        event.preventDefault()\n\n        const { isPwError, isEmailError } = this.state\n\n        if (isPwError === false && isEmailError === false) {\n            // console.log(this.state)\n            try {\n                let newUser = await axios.post('http://localhost:3001/api/users/create-user', {\n                    email: this.state.email,\n                    password: this.state.password\n                })\n\n                console.log('newUser axios', newUser)\n                let userEmail = newUser.data.email\n                let twtToken = newUser.data.jwtToken\n\n                localStorage.setItem('jwtToken', twtToken)\n                this.setState({\n                    userToken: 'thisIsAToken'\n                }, () => {\n                    this.props.authorize(twtToken, userEmail)\n                    this.props.history.push('/all-meals')\n                })\n            }\n            catch (e) {\n                console.log('e response', e.response)\n                this.setState({\n                    isEmailError: true,\n                    emailErrorMessage: e\n                })\n            }\n        }\n    }\n\n\n    render() {\n        const { email, password, isEmailError, emailErrorMessage, isPwError, pwErrorMessage } = this.state\n        \n        return (\n            <div>\n                <img id='hero-img' src='/RegisterImgNoText.jpg' />\n                <div className='register-login-wrapper'>\n                    <h1 className='register-header'>Discover The World's Top Recipes!</h1>\n                    <form onSubmit={this.handleOnSubmit}>\n                        <p className='label-name'>Email</p><br />\n                        <input\n                            onChange={this.handleOnChangeEmail}\n                            className='input-field'\n                            type='text'\n                            name='email'\n                            value={email}\n                        >\n                        </input><br />\n                        {isEmailError ? (<p className=\"error-message\">{emailErrorMessage}</p>) : ''}\n                        <p className='label-name'>Password</p><br />\n                        <input\n                            onChange={this.handleOnChangePassword}\n                            className='input-field'\n                            type='text'\n                            name='password'\n                            value={password}\n                        >\n                        </input><br />\n                        {isPwError ? (<p className=\"error-message\">{pwErrorMessage}</p>) : ''}\n                        <button\n                            // onSubmit={this.onSubmit}\n                            type='submit'\n                            className=\"register-login-button\"\n                        >Register</button>\n                    </form>\n                    <Link to='/login' className='register-login-link'><p className='register-login-link'>Don't have an account? <span className='register-login-link-span'>Login Here   </span></p></Link>\n            \n                </div>\n            </div>\n        )\n    }\n}\n","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/MealThumb/FavList.js",["102"],"\nimport React from 'react';\nimport { BrowserRouter as Router, Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { MealThumb } from './MealThumb'\nimport { FavButton } from './FavButton'\nimport MenuAppBar from '../menuBars/AllMealsBar'\nimport './MealThumb.css'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        height: 220,\n\n    },\n}));\n\nconst wrapper = {\n    width: '70%',\n    margin: 'auto'\n}\n\nexport default function FavList({ randomList }) {\n    const classes = useStyles();\n    return (\n        <>\n            <MenuAppBar />\n            <div style={wrapper}>\n                <div className={classes.root}>\n                    <Grid container spacing={3} direction=\"row\" justify=\"center\">\n                        {randomList !== undefined\n                            ? (randomList.map(item => {\n                                return (\n                                    <Grid item xs={6} sm={3}>\n                                        <Link to={{ pathname: `/single-meal`, meal: { item } }}>\n                                            <MealThumb item={item} />\n                                        </Link>\n                                        <FavButton className='small-fav-btn' item={item} />\n                                    </Grid>\n                                )\n                            }))\n                            : ''\n                        }\n                    </Grid>\n                </div>\n            </div>\n        </>\n    );\n}\n\n","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/Context.js",["103"],"import React, {reducer} from 'react'\n\nexport const AuthContext = React.createContext()\n\n","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/hooks/useLocalStorage.js",["104"],"import { useState, useEffect } from 'react'\nimport jwtDecode from 'jwt-decode'\n\nfunction useLocalStorage(key, initialValue = \"\") {\n    const [jwtTokenValue, setJwtTokenValue] = useState(() => {\n        return localStorage.getItem(key) || initialValue\n    });\n\n    useEffect(() => {\n        localStorage.setItem(key, jwtTokenValue)\n    }, [jwtTokenValue, setJwtTokenValue])\n\n    function jwtDecodeFunc(token) {\n        return jwtDecode(token)\n    }\n\n    return [jwtTokenValue, setJwtTokenValue, jwtDecodeFunc]\n}\n\nexport default useLocalStorage",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":13,"column":10,"nodeType":"111","messageId":"112","endLine":13,"endColumn":28},{"ruleId":"109","severity":1,"message":"113","line":17,"column":17,"nodeType":"111","messageId":"112","endLine":17,"endColumn":27},{"ruleId":"109","severity":1,"message":"114","line":21,"column":14,"nodeType":"111","messageId":"112","endLine":21,"endColumn":21},{"ruleId":"115","severity":1,"message":"116","line":54,"column":13,"nodeType":"117","endLine":71,"endColumn":4},{"ruleId":"109","severity":1,"message":"118","line":3,"column":27,"nodeType":"111","messageId":"112","endLine":3,"endColumn":33},{"ruleId":"109","severity":1,"message":"119","line":3,"column":35,"nodeType":"111","messageId":"112","endLine":3,"endColumn":39},{"ruleId":"109","severity":1,"message":"120","line":7,"column":13,"nodeType":"111","messageId":"112","endLine":7,"endColumn":19},{"ruleId":"121","severity":1,"message":"122","line":14,"column":21,"nodeType":"123","endLine":14,"endColumn":77},{"ruleId":"109","severity":1,"message":"124","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":18},{"ruleId":"109","severity":1,"message":"125","line":10,"column":10,"nodeType":"111","messageId":"112","endLine":10,"endColumn":21},{"ruleId":"109","severity":1,"message":"126","line":15,"column":11,"nodeType":"111","messageId":"112","endLine":15,"endColumn":13},{"ruleId":"109","severity":1,"message":"127","line":19,"column":19,"nodeType":"111","messageId":"112","endLine":19,"endColumn":23},{"ruleId":"115","severity":1,"message":"116","line":51,"column":15,"nodeType":"117","endLine":77,"endColumn":6},{"ruleId":"115","severity":1,"message":"128","line":77,"column":8,"nodeType":"129","endLine":77,"endColumn":14,"suggestions":"130"},{"ruleId":"121","severity":1,"message":"122","line":87,"column":29,"nodeType":"123","endLine":87,"endColumn":79},{"ruleId":"131","severity":1,"message":"132","line":116,"column":61,"nodeType":"117","messageId":"133","endLine":116,"endColumn":63},{"ruleId":"109","severity":1,"message":"118","line":2,"column":27,"nodeType":"111","messageId":"112","endLine":2,"endColumn":33},{"ruleId":"109","severity":1,"message":"134","line":32,"column":9,"nodeType":"111","messageId":"112","endLine":32,"endColumn":21},{"ruleId":"109","severity":1,"message":"118","line":3,"column":27,"nodeType":"111","messageId":"112","endLine":3,"endColumn":33},{"ruleId":"109","severity":1,"message":"135","line":31,"column":12,"nodeType":"111","messageId":"112","endLine":31,"endColumn":16},{"ruleId":"109","severity":1,"message":"136","line":31,"column":18,"nodeType":"111","messageId":"112","endLine":31,"endColumn":22},{"ruleId":"109","severity":1,"message":"137","line":31,"column":24,"nodeType":"111","messageId":"112","endLine":31,"endColumn":33},{"ruleId":"109","severity":1,"message":"138","line":31,"column":47,"nodeType":"111","messageId":"112","endLine":31,"endColumn":54},{"ruleId":"109","severity":1,"message":"118","line":2,"column":27,"nodeType":"111","messageId":"112","endLine":2,"endColumn":33},{"ruleId":"109","severity":1,"message":"139","line":6,"column":8,"nodeType":"111","messageId":"112","endLine":6,"endColumn":18},{"ruleId":"109","severity":1,"message":"140","line":8,"column":8,"nodeType":"111","messageId":"112","endLine":8,"endColumn":16},{"ruleId":"109","severity":1,"message":"141","line":10,"column":8,"nodeType":"111","messageId":"112","endLine":10,"endColumn":14},{"ruleId":"109","severity":1,"message":"142","line":11,"column":8,"nodeType":"111","messageId":"112","endLine":11,"endColumn":24},{"ruleId":"109","severity":1,"message":"143","line":12,"column":8,"nodeType":"111","messageId":"112","endLine":12,"endColumn":17},{"ruleId":"109","severity":1,"message":"134","line":38,"column":9,"nodeType":"111","messageId":"112","endLine":38,"endColumn":21},{"ruleId":"121","severity":1,"message":"122","line":94,"column":17,"nodeType":"123","endLine":94,"endColumn":67},{"ruleId":"121","severity":1,"message":"122","line":100,"column":17,"nodeType":"123","endLine":100,"endColumn":67},{"ruleId":"109","severity":1,"message":"118","line":3,"column":27,"nodeType":"111","messageId":"112","endLine":3,"endColumn":33},{"ruleId":"109","severity":1,"message":"144","line":1,"column":16,"nodeType":"111","messageId":"112","endLine":1,"endColumn":23},{"ruleId":"115","severity":1,"message":"145","line":11,"column":8,"nodeType":"129","endLine":11,"endColumn":41,"suggestions":"146"},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'SignalCellularNull' is defined but never used.","Identifier","unusedVar","'setFavList' is assigned a value but never used.","'setTest' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Router' is defined but never used.","'Link' is defined but never used.","'idMeal' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'DeleteIcon' is defined but never used.","'AuthContext' is defined but never used.","'id' is assigned a value but never used.","'like' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'idMeal' and 'props.user._id'. Either include them or remove the dependency array.","ArrayExpression",["149"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'handleChange' is assigned a value but never used.","'auth' is assigned a value but never used.","'user' is assigned a value but never used.","'authorize' is assigned a value but never used.","'favList' is assigned a value but never used.","'Typography' is defined but never used.","'MenuIcon' is defined but never used.","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'reducer' is defined but never used.","React Hook useEffect has a missing dependency: 'key'. Either include it or remove the dependency array.",["150"],"no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [idMeal, meal, props.user._id]",{"range":"155","text":"156"},"Update the dependencies array to be: [jwtTokenValue, key, setJwtTokenValue]",{"range":"157","text":"158"},[2340,2346],"[idMeal, meal, props.user._id]",[338,371],"[jwtTokenValue, key, setJwtTokenValue]"]