[{"/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/index.js":"1","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/App.js":"2","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/reportWebVitals.js":"3","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/MealThumb/MealThumb.js":"4","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/MealThumb/FavButton.js":"5","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/SingleMealPage/SingleMealPage.js":"6","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/menuBars/SingleMealBar.js":"7","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/MealThumb/RandomList.js":"8","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/menuBars/AllMealsBar.js":"9","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/loginAndRegister/Login.js":"10","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/loginAndRegister/Register.js":"11"},{"size":500,"mtime":1608308921858,"results":"12","hashOfConfig":"13"},{"size":1544,"mtime":1608423618044,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1608308921859,"results":"15","hashOfConfig":"13"},{"size":634,"mtime":1608420542825,"results":"16","hashOfConfig":"13"},{"size":979,"mtime":1608413506766,"results":"17","hashOfConfig":"13"},{"size":3050,"mtime":1608422185597,"results":"18","hashOfConfig":"13"},{"size":2483,"mtime":1608422184096,"results":"19","hashOfConfig":"13"},{"size":1721,"mtime":1608422659306,"results":"20","hashOfConfig":"13"},{"size":3328,"mtime":1608422573257,"results":"21","hashOfConfig":"13"},{"size":4414,"mtime":1608423667965,"results":"22","hashOfConfig":"13"},{"size":4642,"mtime":1608423681443,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1gdbg4y",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/index.js",[],["52","53"],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/App.js",["54"],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/reportWebVitals.js",[],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/MealThumb/MealThumb.js",["55","56","57","58"],"import React from 'react'\nimport './MealThumb.css'\nimport { BrowserRouter as Router, Link } from 'react-router-dom'\n\n\nexport const MealThumb = ({ item }) => {\n    const { idMeal, strCategory, strMeal, strMealThumb } = item\n    return (\n        \n            <div id='meal-module-wrapper'>\n                <p className='meal-module-category'>{strCategory.toUpperCase()}</p>\n                <div className='name-and-img-wrapper'>\n                    <div className='meal-module-name'>{strMeal}</div>\n                    <img className='meal-module-image' src={strMealThumb} />\n                </div>\n            </div>\n        \n    )\n}\n\n","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/MealThumb/FavButton.js",[],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/SingleMealPage/SingleMealPage.js",["59","60"],"import React from 'react'\nimport './SingleMealPage.css'\nimport AppBar from '@material-ui/core/AppBar';\nimport SingleMealBar from '../menuBars/SingleMealBar'\n\n\n\nexport const SingleMealPage = (props) => {\n    let item = props.location.meal.item\n    let { strArea, strCategory, strInstructions, strMeal, strMealThumb, strTags, strSource } = item\n\n    let ingredients = [\n        item.strIngredient1,\n        item.strIngredient3,\n        item.strIngredient2,\n        item.strIngredient4,\n        item.strIngredient5,\n        item.strIngredient6,\n        item.strIngredient7,\n        item.strIngredient8,\n        item.strIngredient9,\n        item.strIngredient10,\n        item.strIngredient11,\n        item.strIngredient12,\n        item.strIngredient13,\n        item.strIngredient14,\n        item.strIngredient15,\n        item.strIngredient16,\n        item.strIngredient17,\n        item.strIngredient18,\n        item.strIngredient19,\n        item.strIngredient20,\n    ]\n\n\n    return (\n        <>\n            <div>\n        <SingleMealBar/>\n                <div id=\"recipe-div\">\n                    <div id='header'>\n                        <h1>{strMeal}</h1>\n                        <div id='video-info-wrapper'>\n                            <img class='recipe-hero-img' src={strMealThumb} />\n                            <ul id=\"info\">\n                                <button className=\"add-to-favorites-button\">Add To Favorites</button>\n                                <li className=\"info-list\">Tags: {strTags}</li>\n                                <li className=\"info-list\">Country: {strArea}</li>\n                                <li className=\"info-list\">Catergory: {strCategory}</li>\n                                <li className=\"info-list\">Source: <a className='recipe-link' href={strSource}>Link</a>\n                                </li>\n                            </ul>\n\n                        </div>\n\n\n                    </div>\n                    <div id='ingredients'>\n                        <h2>Ingredients</h2>\n                        <div className='ingredient-and-instruction-wrapper'>\n                            <p className='instruction-paragraph'>\n                                {ingredients.length !== 0\n                                    ? (ingredients.map(item => { if (item !== '' && item !== null) { return (<li>{item}</li>) } }))\n                                    : \"\"}\n                            </p>\n                        </div>\n                    </div>\n                    <div id='instruction'>\n                        <h2>Instruction</h2>\n                        <div className='ingredient-and-instruction-wrapper'>\n                            <p className='instruction-paragraph'>{strInstructions}</p>\n                        </div>\n                    </div>\n                </div>\n                <div id='footer'>\n                    Â© 2020 Code Immersives - Final Project Term2 By Miley <br />\n              All rights reserved.\n            </div>\n            <AppBar/>\n            </div>\n        </>\n    )\n}\n","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/menuBars/SingleMealBar.js",["61","62"],"import React from 'react';\nimport { BrowserRouter as Router, NavLink } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    color: 'white',\n  },\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <NavLink to='/all-meals' variant=\"h6\" activeStyle={{ textDecoration: 'underline' }} className={classes.title}>\n            <Typography >\n              Go Back\n          </Typography>\n          </NavLink>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n\n\n","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/MealThumb/RandomList.js",["63"],"\nimport React from 'react';\nimport { BrowserRouter as Router, Link } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { MealThumb } from './MealThumb'\nimport { FavButton } from './FavButton'\nimport MenuAppBar from '../menuBars/AllMealsBar'\nimport './MealThumb.css'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        height: 220,\n\n    },\n}));\n\nconst wrapper = {\n    width: '70%',\n    margin: 'auto'\n}\n\nexport default function RandomList({ randomList }) {\n    const classes = useStyles();\n    return (\n        <>\n            <MenuAppBar />\n            <div style={wrapper}>\n                <div className={classes.root}>\n                    <Grid container spacing={3} direction=\"row\" justify=\"center\">\n                        {randomList !== undefined\n                            ? (randomList.map(item => {\n                                return (\n                                    <Grid item xs={6} sm={3}>\n                                        <Link to={{ pathname: `/single-meal`, meal: { item } }}>\n                                            <MealThumb item={item} />\n                                        </Link>\n                                        <FavButton className='small-fav-btn' item={item} />\n                                    </Grid>\n                                )\n                            }))\n                            : ''\n                        }\n                    </Grid>\n                </div>\n            </div>\n        </>\n    );\n}\n\n","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/menuBars/AllMealsBar.js",["64","65","66","67","68","69","70"],"import React from 'react';\nimport { BrowserRouter as Router, NavLink } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    color: 'white',\n  },\n}));\n\nexport default function MenuAppBar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      {/* <FormGroup>\n        <FormControlLabel\n          control={<Switch checked={auth} onChange={handleChange} aria-label=\"login switch\" />}\n          label={auth ? 'Logout' : 'Login'}\n        />\n      </FormGroup> */}\n      <AppBar position=\"static\">\n        <Toolbar>\n          {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton> */}\n          <NavLink to='/all-meals' variant=\"h6\" activeStyle={{ textDecoration: 'underline' }} className={classes.title}>\n            {/* <Typography > */}\n              All Meals\n          {/* </Typography> */}\n          </NavLink>\n          <NavLink to='/favorites' variant=\"h6\" activeStyle={{ textDecoration: 'underline' }} className={classes.title}>\n            {/* <Typography > */}\n              Favorites\n          {/* </Typography> */}\n          </NavLink>\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n\n\n","/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/loginAndRegister/Login.js",["71"],"/Users/CodeImmersives/Documents/code-immersives/term-2/week-11/meals-final-project-using-context/src/components/loginAndRegister/Register.js",["72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":14,"column":13,"nodeType":"79","endLine":32,"endColumn":4},{"ruleId":"80","severity":1,"message":"81","line":3,"column":27,"nodeType":"82","messageId":"83","endLine":3,"endColumn":33},{"ruleId":"80","severity":1,"message":"84","line":3,"column":35,"nodeType":"82","messageId":"83","endLine":3,"endColumn":39},{"ruleId":"80","severity":1,"message":"85","line":7,"column":13,"nodeType":"82","messageId":"83","endLine":7,"endColumn":19},{"ruleId":"86","severity":1,"message":"87","line":14,"column":21,"nodeType":"88","endLine":14,"endColumn":77},{"ruleId":"86","severity":1,"message":"87","line":44,"column":29,"nodeType":"88","endLine":44,"endColumn":79},{"ruleId":"89","severity":1,"message":"90","line":63,"column":61,"nodeType":"79","messageId":"91","endLine":63,"endColumn":63},{"ruleId":"80","severity":1,"message":"81","line":2,"column":27,"nodeType":"82","messageId":"83","endLine":2,"endColumn":33},{"ruleId":"80","severity":1,"message":"92","line":32,"column":9,"nodeType":"82","messageId":"83","endLine":32,"endColumn":21},{"ruleId":"80","severity":1,"message":"81","line":3,"column":27,"nodeType":"82","messageId":"83","endLine":3,"endColumn":33},{"ruleId":"80","severity":1,"message":"81","line":2,"column":27,"nodeType":"82","messageId":"83","endLine":2,"endColumn":33},{"ruleId":"80","severity":1,"message":"93","line":6,"column":8,"nodeType":"82","messageId":"83","endLine":6,"endColumn":18},{"ruleId":"80","severity":1,"message":"94","line":8,"column":8,"nodeType":"82","messageId":"83","endLine":8,"endColumn":16},{"ruleId":"80","severity":1,"message":"95","line":10,"column":8,"nodeType":"82","messageId":"83","endLine":10,"endColumn":14},{"ruleId":"80","severity":1,"message":"96","line":11,"column":8,"nodeType":"82","messageId":"83","endLine":11,"endColumn":24},{"ruleId":"80","severity":1,"message":"97","line":12,"column":8,"nodeType":"82","messageId":"83","endLine":12,"endColumn":17},{"ruleId":"80","severity":1,"message":"92","line":36,"column":9,"nodeType":"82","messageId":"83","endLine":36,"endColumn":21},{"ruleId":"86","severity":1,"message":"87","line":94,"column":17,"nodeType":"88","endLine":94,"endColumn":67},{"ruleId":"86","severity":1,"message":"87","line":100,"column":17,"nodeType":"88","endLine":100,"endColumn":67},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'idMeal' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'handleChange' is assigned a value but never used.","'Typography' is defined but never used.","'MenuIcon' is defined but never used.","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]